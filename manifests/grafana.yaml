# TODO:
# - add docker.io/grafana/grafana_renderer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  ini_file: |
[auth.basic]
enabled = false

[security]
allow_embedding = true

[database]
type = postgres
url = $__env{GF_DATABASE_URL}

[remote_cache]
type = redis
connstr = addr=redis,password=$__env{REDIS_PASSWORD}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  labels:
    app: grafana
spec:
  replicas: 3
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: docker.io/grafana/grafana:8.0.3
          env:
            - name: GF_INSTALL_PLUGINS
              value: flant-statusmap-panel,ae3e-plotly-panel
            - name: GF_SERVER_ROOT_URL
              value: https://grafana.durbin.casa
            - name: GF_RENDERING_SERVER_URL
              value: http://grafana_renderer:8081/render
            - name: GF_RENDERING_CALLBACK_URL
              value: http://grafana:3000
            - name: GF_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: gf-database-url
                  key: password
          ports:
            - name: web
              containerPort: 3000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-postgres-deployment
  labels:
    app: grafana-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-postgres
  template:
    metadata:
      labels:
        app: grafana-postgres
    spec:
      containers:
        - name: grafana-postgres
          image: docker.io/postgres:13
          env:
            - name: POSTGRES_USER
              value: grafana
            - name: POSTGRES_DB
              value: grafana
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gf-database-password
                  key: password
          ports:
            - name: postgres
              containerPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: grafana
  ports:
    - name: web
      port: 80
      targetPort: web

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-postgres-service
spec:
  selector:
    app: grafana-postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
spec:
  rules:
    - host: 'grafana.localhost'
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: grafana-service
                port:
                  name: web
